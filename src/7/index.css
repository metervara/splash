:root {
  --text-color: #f1dddd;
  --hint-color: rgb(252, 151, 151);
  /* --text-color: #c8aeae; */
  /* --text-tint-even: red; */
  --text-tint-even: rgb(116, 98, 214);
  --text-tint-odd: white;
  /* --text-dark: blue; */
  --bg-color: #123530;

  --weight: 400;
}

html, body {
  height: 100%; 
}
body {
  margin: 0;
  font-family: 'IBM Plex Mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  color: var(--text-color);
  
  display: flex;
  flex-direction: column;
  justify-content: center; 
  align-items: center;

  background-color: var(--bg-color);
}

h1 {
  font-weight: var(--weight);
  font-size: clamp(2.5rem, 8vw, 8rem);
  margin: 0;
  line-height: 1.1;
}

.title-container {
  position: relative;
  display: inline-block;
}

h1 {
  --fold: 20; 
  --fold-max: 40;                       /* unitless control */
  --θ: calc(var(--fold) * 1deg);   /* angle from fold */
  /* --t: calc(var(--fold) / var(--fold-max) * 100%); */
  --stretch: 0.5;
  --scale-x: calc(var(--stretch) + 0.5);
  --scale-y: calc(1.5 - var(--stretch));
  --t: calc(var(--stretch) * 100%);
  
  display: inline-flex;
  gap: 0;
  white-space: nowrap;
  font-variant-ligatures: none;    /* keep widths predictable */
  /* shrink fraction = (1 - cos θ) → negative letter-spacing to pull letters in */
  letter-spacing: calc((1 - cos(var(--θ))) * -0.5ch);
  transform: scale(var(--scale-x), var(--scale-y));
}

h1 span {
  box-sizing: border-box;
  display: inline-block;
  transform-origin: center;
}

h1 span {
  --dir: 1;
  text-decoration: underline;

  /* color: color-mix(in srgb, var(--text-tint-odd) var(--t), var(--text-color)); */

  transform:
    skewY(calc(var(--dir) * var(--θ)))
    /* scaleX(calc(cos(var(--θ)))); */
}

/* alternate sign across spans (counted in document order) */
h1 span:nth-child(even) {
  --dir: -1; 
  color: color-mix(in srgb, var(--text-color) var(--t), var(--text-tint-even));
}

/* Dot container - absolutely positioned after h1 */
.dot {
  position: absolute;
  cursor: pointer;
  width: 1ch;
  height: 1ch;
  display: flex;
  align-items: center;
  justify-content: center;
  /* border: 1px solid yellow; */
  pointer-events: auto;
  overflow: hidden;


  font-weight: var(--weight);
  font-size: clamp(2.5rem, 8vw, 8rem);
  margin: 0;
  line-height: 1.1;

  bottom: 5%;
  right: -1ch;
}

/* Dot inner with the character */
.dot-inner {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  line-height: 1;
  transform-origin: 50% 50%;
  transition: transform 250ms cubic-bezier(0,.5,.5,1);
  
  padding-bottom: 0.12em;
}

.dot.dragging .dot-inner,
.dot:hover .dot-inner {
  transform: scale(1.3);
}

.hint {
  font-family: "IBM Plex Sans", sans-serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: italic;
  font-variation-settings:
    "wdth" 100;

  position: absolute;
  bottom: 50%;
  left: 104.5%;
  width: 3vw;
  opacity: 1;
  transition: opacity 150ms linear;
}

.hint.hidden {
  opacity: 0;
}

.hint::after {
  content: "Drag the dot";
  position: absolute;
  left: 110%;
  bottom: 105%;
  white-space: nowrap;
  /* text-align: center; */
  transform: translateX(-50%);
  color: var(--hint-color);
  font-size: max(1.25vw, 12px);
}

.hint svg {
  width: 100%;             /* fills the .hint container width */
  height: auto;            /* keeps the aspect ratio */
  display: block;          /* removes inline spacing below SVG */
}

.hint svg path {
  stroke: var(--hint-color);
  stroke-width: 1.5;
}

/* .hint svg path.arrow-curve {
  stroke-dasharray: 5px;
} */
