:root {
  --text-color: white;
  --bg-color: blacK;
  
  --effect-progress-abs: 0; /* runtime-computed per section by JS, unitless 0..1 */
  --effect-progress-signed: 0; /* runtime-computed per section by JS, -1..1 */
  
  /* Animation variables */
  --transition-duration: 500ms;
  --transition-easing: linear;
  
  /* Letter color combinations */
  --letter-0-bg: #1a1a2e;
  --letter-0-text: #e94560;
  
  --letter-1-bg: #16213e;
  --letter-1-text: #0f3460;
  
  --letter-2-bg: #0f3460;
  --letter-2-text: #533483;
  
  --letter-3-bg: #533483;
  --letter-3-text: #7209b7;
  
  --letter-4-bg: #7209b7;
  --letter-4-text: #f72585;
  
  --letter-5-bg: #f72585;
  --letter-5-text: #b5179e;
  
  --letter-6-bg: #b5179e;
  --letter-6-text: #480ca8;
  
  --letter-7-bg: #480ca8;
  --letter-7-text: #3a0ca3;
  
  --letter-8-bg: #3a0ca3;
  --letter-8-text: #4361ee;
}

html, body {
  width: 100%;
  height: 100%;
  scroll-snap-type: y mandatory;
}
body {
  margin: 0;
  font-family: 'IBM Plex Mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  color: var(--text-color);
  background-color: var(--bg-color);
}

main {
  width: 100%;
  display: flex;
  flex-direction: column;

  background-color: var(--letter-0-bg);
  color: var(--letter-0-text);
}

section {
  margin: 0;
  width: 100%;
  height: 100vw;
  height: 100lvh;
  scroll-snap-align: start;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.letter {
  font-size: min(100vw, 100vh);
  font-weight: 700;
  line-height: 1;
  margin: 0;
  padding: 0;
}

/* Base colors and transitions */
main {
  transition: background-color var(--transition-duration) var(--transition-easing), 
              color var(--transition-duration) var(--transition-easing);
  
  /* Default to first letter colors before JavaScript loads */
  background-color: var(--letter-0-bg);
  color: var(--letter-0-text);
}

/* Letter-specific colors */
/*
main.active-letter-0 {
  background-color: var(--letter-0-bg);
  color: var(--letter-0-text);
}

main.active-letter-1 {
  background-color: var(--letter-1-bg);
  color: var(--letter-1-text);
}

main.active-letter-2 {
  background-color: var(--letter-2-bg);
  color: var(--letter-2-text);
}

main.active-letter-3 {
  background-color: var(--letter-3-bg);
  color: var(--letter-3-text);
}

main.active-letter-4 {
  background-color: var(--letter-4-bg);
  color: var(--letter-4-text);
}

main.active-letter-5 {
  background-color: var(--letter-5-bg);
  color: var(--letter-5-text);
}

main.active-letter-6 {
  background-color: var(--letter-6-bg);
  color: var(--letter-6-text);
}

main.active-letter-7 {
  background-color: var(--letter-7-bg);
  color: var(--letter-7-text);
}

main.active-letter-8 {
  background-color: var(--letter-8-bg);
  color: var(--letter-8-text);
}
*/

/* Unified slices effect */
/* Base hook */
section.effect-unified .letter {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

/* Shared CSS variables with defaults */
section.effect-unified {
  --slice-count: 19;
  --max-amount: 1;
  --max-translate-x: 0px;
  --max-translate-y: 0px;
  --max-skew-x: 0deg;
  --max-skew-y: 0deg;
  --max-rotate: 0deg;
  --max-scale: 1;
  /* Stagger amounts (0 neutral). Applied as 1 + distance * amount */
  --stagger-translate-x: 0;
  --stagger-translate-y: 0;
  --stagger-skew-x: 0;
  --stagger-skew-y: 0;
  --stagger-rotate: 0;
  --stagger-scale: 0;
  /* Progress indirection (can be overridden by JS) */
  --p-assemble: var(--effect-progress-abs);
  --p-translate-x: var(--effect-progress-abs);
  --p-translate-y: var(--effect-progress-abs);
  --p-skew-x: var(--effect-progress-abs);
  --p-skew-y: var(--effect-progress-abs);
  --p-rotate: var(--effect-progress-signed);
  --p-scale: var(--effect-progress-abs);
}

/* Vertical layout */
section.effect-unified.slice-vertical .letter {
  flex-direction: row;
}
section.effect-unified.slice-vertical .slice {
  position: relative;
  width: calc(100% / var(--slice-count));
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}
section.effect-unified.slice-vertical .slice-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100% * var(--slice-count));
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  will-change: transform;
  transform-origin: 50% 50%;
  /* Assemble/disassemble + transforms */
  --dist: var(--slice-distance, 0);
  --mul-translate-x: calc(1 + var(--dist) * var(--stagger-translate-x));
  --mul-translate-y: calc(1 + var(--dist) * var(--stagger-translate-y));
  --mul-skew-x: calc(1 + var(--dist) * var(--stagger-skew-x));
  --mul-skew-y: calc(1 + var(--dist) * var(--stagger-skew-y));
  --mul-rotate: calc(1 + var(--dist) * var(--stagger-rotate));
  --mul-scale: calc(1 + var(--dist) * var(--stagger-scale));
  transform:
    translateX(
      calc(-100% * (
        ((1 - (var(--p-assemble) * var(--max-amount))) * (var(--slice-index) / var(--slice-count))) +
        ((var(--p-assemble) * var(--max-amount)) * (0.5 - (0.5 / var(--slice-count))))
      ))
    )
    translateX(calc(var(--p-translate-x) * var(--max-translate-x) * var(--mul-translate-x)))
    translateY(calc(var(--p-translate-y) * var(--max-translate-y) * var(--mul-translate-y)))
    skewX(calc(var(--p-skew-x) * var(--max-skew-x) * var(--mul-skew-x)))
    skewY(calc(var(--p-skew-y) * var(--max-skew-y) * var(--mul-skew-y)))
    rotate(calc(var(--p-rotate) * var(--max-rotate) * var(--mul-rotate)))
    scale(calc(1 + var(--p-scale) * (var(--max-scale) - 1) * var(--mul-scale)));
}
section.effect-unified.slice-vertical .slice-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font: inherit;
  color: inherit;
  line-height: inherit;
  white-space: nowrap;
}

/* Horizontal layout */
section.effect-unified.slice-horizontal .letter {
  flex-direction: column;
}
section.effect-unified.slice-horizontal .slice {
  position: relative;
  width: 100%;
  height: calc(100% / var(--slice-count));
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}
section.effect-unified.slice-horizontal .slice-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: calc(100% * var(--slice-count));
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  will-change: transform;
  transform-origin: 50% 50%;
  --dist: var(--slice-distance, 0);
  --mul-translate-x: calc(1 + var(--dist) * var(--stagger-translate-x));
  --mul-translate-y: calc(1 + var(--dist) * var(--stagger-translate-y));
  --mul-skew-x: calc(1 + var(--dist) * var(--stagger-skew-x));
  --mul-skew-y: calc(1 + var(--dist) * var(--stagger-skew-y));
  --mul-rotate: calc(1 + var(--dist) * var(--stagger-rotate));
  --mul-scale: calc(1 + var(--dist) * var(--stagger-scale));
  transform:
    translateY(
      calc(-100% * (
        ((1 - (var(--p-assemble) * var(--max-amount))) * (var(--slice-index) / var(--slice-count))) +
        ((var(--p-assemble) * var(--max-amount)) * (0.5 - (0.5 / var(--slice-count))))
      ))
    )
    translateX(calc(var(--p-translate-x) * var(--max-translate-x) * var(--mul-translate-x)))
    translateY(calc(var(--p-translate-y) * var(--max-translate-y) * var(--mul-translate-y)))
    skewX(calc(var(--p-skew-x) * var(--max-skew-x) * var(--mul-skew-x)))
    skewY(calc(var(--p-skew-y) * var(--max-skew-y) * var(--mul-skew-y)))
    rotate(calc(var(--p-rotate) * var(--max-rotate) * var(--mul-rotate)))
    scale(calc(1 + var(--p-scale) * (var(--max-scale) - 1) * var(--mul-scale)));
}
section.effect-unified.slice-horizontal .slice-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font: inherit;
  color: inherit;
  line-height: inherit;
  white-space: nowrap;
}

/* Concentric layout */
section.effect-unified.slice-concentric .letter {
  position: relative;
}
section.effect-unified.slice-concentric .circle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}
section.effect-unified.slice-concentric .circle-content {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--letter-0-bg);
  will-change: transform;
  /* Multiplier decreases towards center: (circleCount-idx-1)/(circleCount-1) */
  --circle-mul-denom: max(1, calc(var(--circle-count, 8) - 1));
  --circle-mul: calc((var(--circle-count, 8) - var(--circle-index) - 1) / var(--circle-mul-denom));
  --dist: var(--circle-distance, var(--circle-mul));
  --mul-translate-x: calc(1 + var(--dist) * var(--stagger-translate-x));
  --mul-translate-y: calc(1 + var(--dist) * var(--stagger-translate-y));
  --mul-skew-x: calc(1 + var(--dist) * var(--stagger-skew-x));
  --mul-skew-y: calc(1 + var(--dist) * var(--stagger-skew-y));
  --mul-rotate: calc(1 + var(--dist) * var(--stagger-rotate));
  --mul-scale: calc(1 + var(--dist) * var(--stagger-scale));
  transform:
    translateX(calc(var(--p-translate-x) * var(--max-translate-x) * var(--mul-translate-x)))
    translateY(calc(var(--p-translate-y) * var(--max-translate-y) * var(--mul-translate-y)))
    skewX(calc(var(--p-skew-x) * var(--max-skew-x) * var(--mul-skew-x)))
    skewY(calc(var(--p-skew-y) * var(--max-skew-y) * var(--mul-skew-y)))
    rotate(calc(var(--p-rotate) * var(--max-rotate) * var(--circle-mul) * var(--mul-rotate)))
    scale(calc(1 + var(--p-scale) * (var(--max-scale) - 1) * var(--circle-mul) * var(--mul-scale)));
}
section.effect-unified.slice-concentric .circle-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font: inherit;
  color: inherit;
  line-height: inherit;
  white-space: nowrap;
}